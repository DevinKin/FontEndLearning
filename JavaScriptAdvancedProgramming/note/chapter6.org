#+hugo_base_dir: /home/devinkin/hugo_blog
#+hugo_section:  ./post/JavaScriptAdvancedProgramming
#+title: JavaScript高级程序设计-第六章-面向对象的程序设计
#+author:
#+hugo_custom_front_matter: :author "devinkin"
#+hugo_weight: auto
#+hugo_auto_set_lastmod: t
#+hugo_categories: JavaScript
#+hugo_tags: JavaScript 前端

* 第六章-面向对象的程序设计
** 理解对象
   使用字面量创建对象的语法
   #+BEGIN_SRC javascript
     var person1 = {
	 name: "Nicholas",
	 age: 29,
	 job: "Software Engineer",
	 sayName : function () {
	     console.log(this.name);
	 }
     }

     person1.sayName();
   #+END_SRC
** 属性类型
   ECMAScript中有两种属性：
   - 数据属性
   - 访问器属性

   数据属性包含一个数据值的位置。在这个位置可以读取和写入值。数据属性有4个描述
   其行为的特性。
   - ~[ [Configurable] ]~ ：表示能否通过 ~delete~ 删除属性从而重新定义属性，能
     否修改属性的特性，或者能否把属性修改为访问器属性。这个特性默认值为 ~true~ 。
   - ~[ [Enumerable] ]~ ：表示能否通过 ~for-in~ 循环返回属性。这个特性默认值为 ~true~ 。
   - ~[ [Writable] ]~ ：表示能否修改属性的指。这个特性默认值为 ~true~ 。
   - ~[ [Value] ]~ ：包含这个属性的数据值。读取属性值的时，从这个位置读；写入
     属性值的时候，把新值保存在这个位置。这个特性的默认值为 ~undefined~ 。

   要修改属性默认的特性，必须使用ECMAScript5的 ~Object.defineProperty()~ 方法。
   这个方法接收三个参数：
   - 属性所在的对象
   - 属性的名字
   - 一个描述符对象：描述符对象的属性必须是：configurable、enumerable、writable
     和value，设置其中一个或多个值，可以修改对应的特性值。
   #+BEGIN_SRC javascript
     var person = {};

     Object.defineProperty(person, "name", {
	 writable: false,
	 value: "Nicholas"
     });

     console.log(person.name)
     person.name = "Greg"
     console.log(person.name)


     var person2 = {};

     Object.defineProperty(person2, "name", {
	 configurable: false,
	 value: "Nico"
     });

     console.log(person2.name)
     delete person2.name
     console.log(person2.name)

     // 抛出错误
     Object.defineProperty(person, "name", {
	 configurable: true,
	 value: "lala"
     })
   #+END_SRC
  
   在调用 ~Object.defineProperty()~ 方法时，如果不指定，configurable、enumerable
   和writable特性的默认值都是 ~false~ 。
