* 第3章-结构和层叠

** 特殊性
   对于每个规则, 用户代理会计算选择器的特殊性, 并将这个特殊性附加到规则中的各个声明. 如果一个元素有两个或多个冲突的属性声明, 那么有最高特殊性的声明就会胜出.

   选择器的特殊性由选择器本身的组件确定, 特殊性值表述为4个部分, 如: 0,0,0,0. 一个选择器具的具体特殊性如下
   - 对于选择器中给定的各个ID属性值, 加 0,1,0,0.
   - 对于选择器中给定的各个类属性值, 属性选择或伪类, 加 0,0,1,0.
   - 对于选择器中给定的各个元素和伪元素, 加 0,0,0,1.
   - 结合符和通配符对特殊性没有任何贡献.
   

*** 内联样式特殊性
   特殊性第一个0是为内联样式声明保留的, 它比所有其他声明的特殊性都高.
   #+begin_src html
     <h1 style="color: green;">The Meadow Party</h1>
   #+end_src

*** 重要性
   有时某个声明可能非常重要, 超过了其他所有声明. 可以使用 ~!important~ 来标志.
   #+begin_src css
     p.dary {
         color: #333 !important;
         background: white;
     }
   #+end_src

   ~!important~ 总是放在声明的最后, 即分号前面.

** 继承
   基于继承机制, 样式不仅应用到指定的元素, 还会应用到它的后代元素.

   某些属性不能继承, 例如属性 ~border~.

   继承的值没有特殊性, 连0特殊性也没有. 0特殊性(通配符)比无特殊性要强.

** 层叠
   CSS2.1层叠规则
   - 找出所有相关规则, 这些规则都包含一个与给定元素匹配的选择器.
   - 按显式权重对应用到该元素的所有声明排序. 标志 ~!import~ 的规则的权重更高.
   - 按特殊性对应用到给定元素的所有声明排序. 有较高特殊性的元素权重更大.
   - 按照出现顺序对应用到给定元素的所有声明排序, 一个声明在样式表或文档中越后出现, 它的权重就越大.
   
*** 按权重和来源排序  
   在声明权重方面要考虑5级, 权重由大到小的顺序依次为
   - 读者的重要声明
   - 创作人员的重要声明
   - 创作人员的正常声明
   - 读者的正常声明
   - 用户代理声明
   
*** 按特殊性排序
    下面的特殊性一致, 推荐链接样式顺序如下(LVHA), 只有最后一个选择器会胜出.
   #+begin_src css
     :link {color: blue;}
     :visited {color: purple;}
     :hover {color: red;}
     :active {color: orange;}
   #+end_src
